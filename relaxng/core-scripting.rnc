datatypes w = "http://whattf.org/datatype-draft"

# #####################################################################
##  RELAX NG Schema for HTML 5: Core Scripting                        #
# #####################################################################

# #####################################################################
## Scripting Elements

## Inline Scripts: <script>

	script.elem.embedded =
		element script { script.inner.embedded & script.attrs.embedded }
	script.attrs.embedded =
		(	common.attrs
		&	script.attrs.type?
		)
	script.elem.imported =
		element script { script.inner.imported & script.attrs.imported }
	script.attrs.imported =
		(	common.attrs
		&	script.attrs.src
		&	script.attrs.defer?
		&	script.attrs.async?
		&	script.attrs.type?
		&	script.attrs.charset?
		)
		script.attrs.src =
			attribute src {
				common.data.uri
			}
		script.attrs.defer =
			attribute defer {
				w:string "defer" | w:string ""
			}
		script.attrs.async =
			attribute async {
				w:string "async" | w:string ""
			} & v5only
		script.attrs.type =
			attribute type {
				common.data.mimetype # XXX without charset parameter!
			}
		script.attrs.charset =
			attribute charset {
				common.data.charset
			}
	script.inner.embedded =
		( common.inner.anything )
	script.inner.imported =
		( empty )
		
	script.elem = 
		(	script.elem.embedded
		|	script.elem.imported
		)
		
	common.elem.metadata |= script.elem
	common.elem.phrasing |= script.elem

## Fallback Unscripted Content: <noscript>

	noscript.elem.head =
		element noscript { noscript.inner.head & noscript.attrs }
		& HTMLonly
		noscript.inner.head = 
			(	link.elem
			|	meta.http-equiv.elem
			|	style.elem
			)*
	noscript.elem.phrasing =
		element noscript { common.inner.phrasing & noscript.attrs }
		& HTMLonly
	noscript.elem.flow =
		element noscript { common.inner.flow & noscript.attrs }
		& HTMLonly
	noscript.attrs =
		( common.attrs )

	common.elem.metadata |= noscript.elem.head
	common.elem.phrasing |= noscript.elem.phrasing
	common.elem.flow |= noscript.elem.flow

# #####################################################################
## Event Handler Attribute Definitions

	common.attrs.scripting &=
		(	scripting.attr.onabort?
		&	scripting.attr.onbeforeunload?
		&	scripting.attr.onblur?
		&	scripting.attr.onchange?
		&	scripting.attr.onclick?
		&	scripting.attr.oncontextmenu?
		&	scripting.attr.ondblclick?
		&	scripting.attr.ondrag?
		&	scripting.attr.ondragend?
		&	scripting.attr.ondragenter?
		&	scripting.attr.ondragleave?
		&	scripting.attr.ondragover?
		&	scripting.attr.ondragstart?
		&	scripting.attr.ondrop?
		&	scripting.attr.onerror?
		&	scripting.attr.onfocus?
		&	scripting.attr.onkeydown?
		&	scripting.attr.onkeypress?
		&	scripting.attr.onkeyup?
		&	scripting.attr.onload?
		&	scripting.attr.onmessage?
		&	scripting.attr.onmousedown?
		&	scripting.attr.onmousemove?
		&	scripting.attr.onmouseout?
		&	scripting.attr.onmouseover?
		&	scripting.attr.onmouseup?
		&	scripting.attr.onmousewheel?
		&	scripting.attr.onresize?
		&	scripting.attr.onscroll?
		&	scripting.attr.onselect?
		&	scripting.attr.onsubmit?
		&	scripting.attr.onunload?
		)
		
	common.attrs.other &= common.attrs.scripting

	scripting.attr.onabort =
		attribute onabort { string }
	scripting.attr.onbeforeunload =
		attribute onbeforeunload { string }
	scripting.attr.onblur =
		attribute onblur { string }
	scripting.attr.onchange =
		attribute onchange { string }
	scripting.attr.onclick =
		attribute onclick { string }
	scripting.attr.oncontextmenu =
		attribute oncontextmenu { string }
	scripting.attr.ondblclick =
		attribute ondblclick { string }
	scripting.attr.ondrag =
		attribute ondrag { string }
	scripting.attr.ondragend =
		attribute ondragend { string }
	scripting.attr.ondragenter =
		attribute ondragenter { string }
	scripting.attr.ondragleave =
		attribute ondragleave { string }
	scripting.attr.ondragover =
		attribute ondragover { string }
	scripting.attr.ondragstart =
		attribute ondragstart { string }
	scripting.attr.ondrop =
		attribute ondrop { string }
	scripting.attr.onerror =
		attribute onerror { string }
	scripting.attr.onfocus =
		attribute onfocus { string }
	scripting.attr.onkeydown =
		attribute onkeydown { string }
	scripting.attr.onkeypress =
		attribute onkeypress { string }
	scripting.attr.onkeyup =
		attribute onkeyup { string }
	scripting.attr.onload =
		attribute onload { string }
	scripting.attr.onmessage =
		attribute onmessage { string }
	scripting.attr.onmousedown =
		attribute onmousedown { string }
	scripting.attr.onmousemove =
		attribute onmousemove { string }
	scripting.attr.onmouseout =
		attribute onmouseout { string }
	scripting.attr.onmouseover =
		attribute onmouseover { string }
	scripting.attr.onmouseup =
		attribute onmouseup { string }
	scripting.attr.onmousewheel =
		attribute onmousewheel { string }
	scripting.attr.onresize =
		attribute onresize { string }
	scripting.attr.onscroll =
		attribute onscroll { string }
	scripting.attr.onselect =
		attribute onselect { string }
	scripting.attr.onsubmit =
		attribute onsubmit { string }
	scripting.attr.onunload =
		attribute onunload { string }

#	scripting.attr.common =
#		(	scripting.attr.mouse
#		&	scripting.attr.keyboard
#		&	scripting.attr.focus
#		)
#	
#	scripting.attr.mouse =
#		(	scripting.attr.mouse.click?
#		&	scripting.attr.mouse.dblclick?
#		&	scripting.attr.mouse.down?
#		&	scripting.attr.mouse.up?
#		&	scripting.attr.mouse.over?
#		&	scripting.attr.mouse.move?
#		&	scripting.attr.mouse.out?
#		)
#		scripting.attr.mouse.click =
#			attribute onclick { string }
#		scripting.attr.mouse.dblclick =
#			attribute ondblclick { string }
#		scripting.attr.mouse.down =
#			attribute onmousedown { string }
#		scripting.attr.mouse.up =
#			attribute onmouseup { string }
#		scripting.attr.mouse.over =
#			attribute onmouseover { string }
#		scripting.attr.mouse.move =
#			attribute onmousemove { string }
#		scripting.attr.mouse.out =
#			attribute onmouseout { string }
#	
#	scripting.attr.keyboard =
#		(	scripting.attr.keyboard.press?
#		&	scripting.attr.keyboard.down?
#		&	scripting.attr.keyboard.up?
#		)
#		scripting.attr.keyboard.press =
#			attribute onkeypress { string }
#		scripting.attr.keyboard.down =
#			attribute onkeydown { string }
#		scripting.attr.keyboard.up =
#			attribute onkeyup { string }
#	
#	
#	scripting.attr.focus =
#		(	scripting.attr.focus.gain?
#		&	scripting.attr.focus.lose?
#		)
#		scripting.attr.focus.gain =
#			attribute onfocus { string }
#		scripting.attr.focus.lose =
#			attribute onblur { string }
#	
#	scripting.attr.loading =
#		(	scripting.attr.loading.load?
#		&	scripting.attr.loading.unload?
#		)
#		scripting.attr.loading.load =
#			attribute onload { string }
#		scripting.attr.loading.unload =
#			attribute onunload { string }


# #####################################################################
# Event Handler Attribute Assignments

#	body.attrs   &= scripting.attr.loading