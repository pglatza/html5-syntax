datatypes w = "http://whattf.org/datatype-draft"

# #####################################################################
##  RELAX NG Schema for HTML 5: Advanced Embedded Content             #
# #####################################################################

## Attributes Common to Media Elements

	# src not included
	media.attrs = 
		(	media.attrs.autoplay?
		&	media.attrs.start?
		&	media.attrs.loopstart?
		&	media.attrs.loopend?
		&	media.attrs.playcount?
		&	media.attrs.controls?
		)
		media.attrs.autoplay   =
			attribute autoplay   {
				w:string "autoplay" | w:string ""
			}
		media.attrs.start   =
			attribute start   {
				common.data.timeoffset
			}
		media.attrs.loopstart  =
			attribute loopstart  {
				common.data.timeoffset
			}
		media.attrs.loopend  =
			attribute loopend  {
				common.data.timeoffset
			}
		media.attrs.end  =
			attribute end  {
				common.data.timeoffset
			}
		media.attrs.playcount  =
			attribute playcount  {
				common.data.integer.positive
			}
		media.attrs.controls  =
			attribute controls  {
				w:string "controls" | w:string ""
			}
		
## Source: <source>

	source.elem =
		element source { source.inner & source.attrs }
	source.elem.last =
		element source { source.inner & source.last.attrs }
	source.attrs =
		(	common.attrs
		&	source.attrs.src
		&	(	(	source.attrs.type
				&	source.attrs.media?
				)
			|	(	source.attrs.media
				)
			)
		)
	source.last.attrs =
		(	common.attrs
		&	source.attrs.src
		&	source.attrs.type?
		&	source.attrs.media?
		)
		source.attrs.src =
			attribute src {
				common.data.uri
			}
		source.attrs.type =
			attribute type {
				common.data.mimetype
			}
		source.attrs.media =
			attribute media {
				common.data.mediaquery
			}
	source.inner =
		( empty )

## Media Source

	media.source = 
		(	media.attrs.src
		|	(	source.elem*
			,	source.elem.last
			)
		)

	media.attrs.src =
		attribute src {
			common.data.uri
		}

## Video: <video>

	video.elem.prose =
		element video { video.inner.prose & video.attrs }
	video.elem.embedded =
		element video { video.inner.embedded & video.attrs }
	video.attrs =
		(	common.attrs
		&	media.attrs
		&	video.attrs.poster?
		&	video.attrs.height?
		&	video.attrs.width?
		)
		video.attrs.poster =
			attribute poster {
				common.data.uri
			}
		video.attrs.height =
			attribute height {
				common.data.integer.positive
			}
		video.attrs.width =
			attribute width {
				common.data.integer.positive
			}
	video.inner.prose =
		(	media.source
		,	common.inner.prose
		)
	video.inner.embedded =
		(	media.source
		,	common.elem.embedded
		)

	common.elem.prose |= video.elem.prose
	common.elem.embedded |= video.elem.embedded

## Audio: <audio>

	audio.elem.prose =
		element audio { audio.inner.prose & audio.attrs }
	audio.elem.embedded =
		element audio { audio.inner.embedded & audio.attrs }
	audio.attrs =
		(	common.attrs
		&	media.attrs
		)
	audio.inner.prose =
		(	media.source
		,	common.inner.prose
		)
	audio.inner.embedded =
		(	media.source
		,	common.elem.embedded
		)

	common.elem.prose |= audio.elem.prose
	common.elem.embedded |= audio.elem.embedded

## Captioned Content: <figure>

	figure.elem =
		element figure { figure.inner & figure.attrs }
	figure.attrs =
		(	common.attrs
		&	common.attrs.aria.implicit.img?
		)
	figure.inner =
		(	( legend.elem, common.inner.prose )
		|	( common.inner.prose, legend.elem? )
		)

	common.elem.prose |= figure.elem
