# #####################################################################
##  RELAX NG Schema for HTML 5: (Basic) Block Markup                  #
# #####################################################################

# #####################################################################
## Paragraph-Level

## Paragraph: <p>

	p.elem =
		element p { p.inner & p.attrs }
	p.attrs =
		( common.attrs )
	p.inner =
		(	common.inner.strict-inline
		|	(	common.inner.struct-inline
			&	nonRoundtrippable & nonHTMLizable
			)
		)

	common.elem.block |= p.elem

## Hint Transition: <hr>

	hr.elem =
		element hr { hr.inner & hr.attrs }
	hr.attrs =
		( common.attrs )
	hr.inner =
		( empty )

	common.elem.block |= hr.elem

# #####################################################################
## Preformatting Blocks

## Preformatted Text: <pre>

	pre.elem =
		element pre { pre.inner & pre.attrs }
	pre.attrs =
		( common.attrs )
	pre.inner =
		( common.inner.strict-inline )

	common.elem.block |= pre.elem
	common.elem.struct-inline |= pre.elem

# #####################################################################
## Simple Lists

## Unordered List: <ul>

	ul.elem =
		element ul { ul.inner & ul.attrs }
	ul.elem.inline =
		element ul { ul.inner.inline & ul.attrs }
	ul.attrs =
		( common.attrs )
	ul.inner =
		( li.elem* )
	ul.inner.inline =
		( li.elem.inline* )

	common.elem.block |= ul.elem
	common.elem.struct-inline |= ul.elem.inline

## Unordered List Item: <li>

	li.elem =
		element li { li.inner & li.attrs }
	li.elem.inline =
		element li { li.inner.inline & li.attrs }
	li.attrs =
		( common.attrs )
	li.inner =
		( common.inner.bimorphic )
	li.inner.inline =
		( common.inner.struct-inline )

## Ordered List: <ol>

	ol.elem =
		element ol { ol.inner & ol.attrs }
	ol.elem.inline =
		element ol { ol.inner.inline & ol.attrs }
	ol.attrs =
		(	common.attrs
		&	ol.attrs.start?
		)
		ol.attrs.start =
			attribute start {
				common.data.integer
			}
	ol.inner =
		( oli.elem* )
	ol.inner.inline =
		( oli.elem.inline* )

	common.elem.block |= ol.elem
	common.elem.struct-inline |= ol.elem.inline

## Ordered List Item: <li>

	oli.elem =
		element li { oli.inner & oli.attrs }
	oli.elem.inline =
		element li { oli.inner.inline & oli.attrs }
	oli.attrs =
		(	common.attrs
		&	oli.attrs.value?
		)
		oli.attrs.value =
			attribute value {
				common.data.integer
			}
	oli.inner =
		( common.inner.bimorphic )
	oli.inner.inline =
		( common.inner.struct-inline )

# #####################################################################
## Definition Lists

## Definition List: <dl>

	dl.elem =
		element dl { dl.inner & dl.attrs }
	dl.elem.inline =
		element dl { dl.inner.inline & dl.attrs }
	dl.attrs =
		( common.attrs )
	dl.inner =
		(	(	dt.elem+
			,	dd.elem+
			)*
		)
	dl.inner.inline =
		(	(	dt.elem+
			,	dd.elem.inline+
			)*
		)

	common.elem.block |= dl.elem
	common.elem.struct-inline |= dl.elem.inline

## Definition Term: <dt>

	dt.elem =
		element dt { dt.inner & dt.attrs }
	dt.attrs =
		( common.attrs )
	dt.inner =
		( common.inner.strict-inline )

## Definition Description: <dd>

	dd.elem =
		element dd { dd.inner & dd.attrs }
	dd.elem.inline =
		element dd { dd.inner.inline & dd.attrs }
	dd.attrs =
		( common.attrs )
	dd.inner =
		( common.inner.bimorphic )
	dd.inner.inline =
		( common.inner.struct-inline )

# #####################################################################
## Miscellaneous Elements

## Document Division: <div>

	div.elem =
		element div { div.inner & div.attrs }
	div.attrs =
		( common.attrs )
	div.inner =
		(	style.elem.scoped*
		,	common.inner.bimorphic 
		)

	common.elem.block |= div.elem

## Title or Explanatory Caption: <legend>

	legend.elem.strict-inline =
		element legend { legend.inner.strict-inline & legend.attrs }
	legend.elem.struct-inline =
		element legend { legend.inner.struct-inline & legend.attrs }
	legend.attrs =
		(	common.attrs
#		&	common-form.attrs.accesskey? #REVISIT is this staying in HTML5?
		)	
	legend.inner.strict-inline =
		( common.inner.strict-inline )
	legend.inner.struct-inline =
		( common.inner.struct-inline )
